# (a)
n <- 20 ; p <- 50
set.seed(1010)
X <- rbind(
matrix(rnorm(n*p, mean = 1*0.5), n, p),
matrix(rnorm(n*p, mean = 2*0.5), n, p),
matrix(rnorm(n*p, mean = 3*0.5), n, p)
)
y <- as.factor(rep(1:3, each = n))
ggplot() + theme_bw() + theme(legend.position = '') + labs(x = '') +
geom_density(aes(as.vector(t(X)), group = rep(y, each = p), color = rep(y, each = p)), size = 1)
###### CH10 Exercises
library(ggplot2)
library(dplyr)
n <- 20 ; p <- 50
set.seed(1010)
X <- rbind(
matrix(rnorm(n*p, mean = 1*0.5), n, p),
matrix(rnorm(n*p, mean = 2*0.5), n, p),
matrix(rnorm(n*p, mean = 3*0.5), n, p)
)
y <- as.factor(rep(1:3, each = n))
ggplot() + theme_bw() + theme(legend.position = '') + labs(x = '') +
geom_density(aes(as.vector(t(X)), group = rep(y, each = p), color = rep(y, each = p)), size = 1)
ggplot() + theme_bw() + theme(legend.position = '') + labs(x = '') +
geom_density(aes(as.vector(t(X)), group = rep(y, each = p), color = rep(y, each = p)), size = 1)
plot(density(rnorm(100000,1*0.5)), main = 'True Density of each 3 Class', xlab = '', col = 'red1')
lines(density(rnorm(100000,2*0.5)), col = 'green3')
lines(density(rnorm(100000,3*0.5)), col = 'blue1')
plot(density(rnorm(100000,1*0.5)), main = 'True Density of each 3 Class', xlab = '', col = 'red1', lwd=1)
plot(density(rnorm(100000,1*0.5)), main = 'True Density of each 3 Class', xlab = '', col = 'red1', lwd=2)
lines(density(rnorm(100000,2*0.5)), col = 'green3', lwd = 2)
lines(density(rnorm(100000,3*0.5)), col = 'blue1', lwd = 2)
plot(density(rnorm(100000,1*0.5)), main = 'True Density of each 3 Class', xlab = '', col = 'red1', lwd=2)
lines(density(rnorm(100000,2*0.5)), col = 'green3', lwd = 2)
lines(density(rnorm(100000,3*0.5)), col = 'blue1', lwd = 2)
# (b)
summary(pc.out <- prcomp(X))
plot(pc.out)
pc.out
names(pc.out)
pc.out$sdev
pc.out$scale
pc.out$rotation
pc.out$center
# (b)
summary(pc.out <- prcomp(X))
ss<-summary(pc.out)
ss$importance
ss$importance%>%write.csv('importance.csv')
getwd()
setwd('C:/Users/HK/Desktop/GitHub/Graduate/DataMining')
plot(pc.out, main = 'Proportions of Variance Explained')
?prcomp.plot
plot.prcomp
?prcomp
plot(pc.out, main = 'Variance Explained')
pc.two <- as.data.frame(pc.out$x[,1:2])
ggplot(pc.two) + theme_bw() + theme(legend.position = 'top') +
geom_point(aes(PC1, PC2, shape = y, color = y), size = 2)
plot(pc.out, main = 'Variance Explained')
